---
Metadata:
  TemplateId: "arn:aws:cloudformation:us-east-1:067103940807:generatedTemplate/4f8b04c2-7884-4e99-83fc-c43895718d0f"
Parameters:
  LambdaFunction00frameSES00ZyloVCodeS3BucketOneOfyPHr6:
    NoEcho: "true"
    Type: "String"
    Description: "An Amazon S3 bucket in the same AWS-Region as your function. The\
      \ bucket can be in a different AWS-account.\nThis property can be replaced with\
      \ other exclusive properties"
  LambdaFunction00framedownloadcve00Lg2FoCodeS3KeyOneOf93g15:
    NoEcho: "true"
    Type: "String"
    Description: "The Amazon S3 key of the deployment package.\nThis property can\
      \ be replaced with other exclusive properties"
  LambdaFunction00framebedrockfixwafv200jUjZcCodeS3KeyOneOfX5lda:
    NoEcho: "true"
    Type: "String"
    Description: "The Amazon S3 key of the deployment package.\nThis property can\
      \ be replaced with other exclusive properties"
  LambdaFunction00framebedrockfilter00rKwRhCodeS3KeyOneOfe4PH9:
    NoEcho: "true"
    Type: "String"
    Description: "The Amazon S3 key of the deployment package.\nThis property can\
      \ be replaced with other exclusive properties"
  LambdaFunction00framebedrockfixwafv200jUjZcCodeS3BucketOneOfFCcjW:
    NoEcho: "true"
    Type: "String"
    Description: "An Amazon S3 bucket in the same AWS-Region as your function. The\
      \ bucket can be in a different AWS-account.\nThis property can be replaced with\
      \ other exclusive properties"
  LambdaFunction00framebedrockfilter00rKwRhCodeS3BucketOneOfYF25Z:
    NoEcho: "true"
    Type: "String"
    Description: "An Amazon S3 bucket in the same AWS-Region as your function. The\
      \ bucket can be in a different AWS-account.\nThis property can be replaced with\
      \ other exclusive properties"
  LambdaFunction00frameSES00ZyloVCodeS3KeyOneOffGsa8:
    NoEcho: "true"
    Type: "String"
    Description: "The Amazon S3 key of the deployment package.\nThis property can\
      \ be replaced with other exclusive properties"
  LambdaFunction00framebedrockagent005iSneCodeS3KeyOneOfPV49u:
    NoEcho: "true"
    Type: "String"
    Description: "The Amazon S3 key of the deployment package.\nThis property can\
      \ be replaced with other exclusive properties"
  LambdaFunction00framedownloadcve00Lg2FoCodeS3BucketOneOfFXebO:
    NoEcho: "true"
    Type: "String"
    Description: "An Amazon S3 bucket in the same AWS-Region as your function. The\
      \ bucket can be in a different AWS-account.\nThis property can be replaced with\
      \ other exclusive properties"
  LambdaFunction00framewafgenerate00uvipOCodeS3KeyOneOfHF8ec:
    NoEcho: "true"
    Type: "String"
    Description: "The Amazon S3 key of the deployment package.\nThis property can\
      \ be replaced with other exclusive properties"
  LambdaFunction00framebedrockagent005iSneCodeS3BucketOneOfuQJ1r:
    NoEcho: "true"
    Type: "String"
    Description: "An Amazon S3 bucket in the same AWS-Region as your function. The\
      \ bucket can be in a different AWS-account.\nThis property can be replaced with\
      \ other exclusive properties"
  LambdaFunction00framewafgenerate00uvipOCodeS3BucketOneOfGxQkv:
    NoEcho: "true"
    Type: "String"
    Description: "An Amazon S3 bucket in the same AWS-Region as your function. The\
      \ bucket can be in a different AWS-account.\nThis property can be replaced with\
      \ other exclusive properties"
Resources:
  IAMRole00framedownloadcveroleb3q30n5n007qQ3E:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/AmazonS3FullAccess"
      - Ref: "IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRolecb35b7fd262f4b15a6c31e7fd1d6669a00Gqxpj"
      MaxSessionDuration: 3600
      RoleName: "frame-download-cve-role-b3q30n5n"
      Policies:
      - PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Resource: "*"
            Action:
            - "ssm:PutParameter"
            - "ssm:GetParameter"
            Effect: "Allow"
            Sid: "VisualEditor0"
        PolicyName: "frame-ssm-get-param"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole2a1b1bac86c74830a56ef315d90037c100mRALa:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-2a1b1bac-86c7-4830-a56e-f315d90037c1"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:us-east-1:067103940807:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:us-east-1:067103940807:log-group:/aws/lambda/frame-bedrock-fix-wafv2:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - "frame-bedrock-fix-wafv2-role-xb8zxhuz"
      Users: []
  EventsEventBus00default00GAA4z:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Events::EventBus"
    DeletionPolicy: "Retain"
    Properties:
      Tags: []
      Name: "default"
  EventsRule00ruleframewafgen002EdmX:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Events::Rule"
    DeletionPolicy: "Retain"
    Properties:
      EventBusName:
        Ref: "EventsEventBus00default00GAA4z"
      EventPattern:
        detail-type:
        - "Object Created"
        source:
        - "aws.s3"
        detail:
          bucket:
            name:
            - "frame-cve-bucket"
      Targets:
      - Arn:
          Ref: "StepFunctionsStateMachine00stateMachineframeautowafgeneration00M6cCH"
        RoleArn:
          Fn::GetAtt:
          - "IAMRole00AmazonEventBridgeInvokeStepFunctions2114717300ALBVS"
          - "Arn"
        Id: "Id8dbb8699-3ba1-438e-8c84-42da2d254afa"
      Id: "frame-waf-gen"
      State: "ENABLED"
      Name: "frame-waf-gen"
  StepFunctionsStateMachine00stateMachineframeautowafgeneration00M6cCH:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::StepFunctions::StateMachine"
    DeletionPolicy: "Retain"
    Properties:
      DefinitionString: "{\"StartAt\":\"filter\",\"TimeoutSeconds\":3600,\"States\"\
        :{\"filter\":{\"Type\":\"Task\",\"Resource\":\"arn:aws:states:::lambda:invoke\"\
        ,\"OutputPath\":\"$.Payload\",\"Parameters\":{\"Payload.$\":\"$\",\"FunctionName\"\
        :\"arn:aws:lambda:us-east-1:067103940807:function:frame-bedrock-filter:$LATEST\"\
        },\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\"\
        ,\"Lambda.SdkClientException\",\"Lambda.TooManyRequestsException\"],\"IntervalSeconds\"\
        :1,\"MaxAttempts\":3,\"BackoffRate\":2}],\"Next\":\"Choice\"},\"Choice\":{\"\
        Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.status\",\"NumericEquals\"\
        :200,\"Next\":\"Generate WAF\"},{\"Variable\":\"$.status\",\"NumericEquals\"\
        :0,\"Next\":\"Success\"}]},\"Generate WAF\":{\"Type\":\"Task\",\"Resource\"\
        :\"arn:aws:states:::lambda:invoke\",\"OutputPath\":\"$.Payload\",\"Parameters\"\
        :{\"Payload.$\":\"$\",\"FunctionName\":\"arn:aws:lambda:us-east-1:067103940807:function:frame-bedrock-agent:$LATEST\"\
        },\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\"\
        ,\"Lambda.SdkClientException\",\"Lambda.TooManyRequestsException\"],\"IntervalSeconds\"\
        :1,\"MaxAttempts\":3,\"BackoffRate\":2}],\"Next\":\"Lambda Callback\"},\"\
        Lambda Callback\":{\"Type\":\"Task\",\"Resource\":\"arn:aws:states:::lambda:invoke.waitForTaskToken\"\
        ,\"Parameters\":{\"FunctionName\":\"arn:aws:lambda:us-east-1:067103940807:function:frame-SES:$LATEST\"\
        ,\"Payload\":{\"ExecutionContext.$\":\"$$\",\"APIGatewayEndpoint\":\"https://a7kqlbugab.execute-api.us-east-1.amazonaws.com/states\"\
        ,\"rules.$\":\"$\"}},\"ResultPath\":\"$.Status\",\"Next\":\"ManualApprovalChoiceState\"\
        },\"ManualApprovalChoiceState\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\"\
        :\"$.Status.Status\",\"StringMatches\":\"Approved! Task approved by 6322772532@g.siit.tu.ac.th\"\
        ,\"Next\":\"Pass\"},{\"Variable\":\"$.Status.Status\",\"StringMatches\":\"\
        Rejected! Task rejected by 6322772532@g.siit.tu.ac.th\",\"Next\":\"Success\"\
        }]},\"Pass\":{\"Type\":\"Pass\",\"Next\":\"Apply rules\",\"Result\":0,\"ResultPath\"\
        :\"$.loop\"},\"Apply rules\":{\"Type\":\"Task\",\"Resource\":\"arn:aws:states:::lambda:invoke\"\
        ,\"OutputPath\":\"$.Payload\",\"Parameters\":{\"Payload.$\":\"$\",\"FunctionName\"\
        :\"arn:aws:lambda:us-east-1:067103940807:function:frame-waf-generate:$LATEST\"\
        },\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\"\
        ,\"Lambda.SdkClientException\",\"Lambda.TooManyRequestsException\"],\"IntervalSeconds\"\
        :1,\"MaxAttempts\":3,\"BackoffRate\":2}],\"Next\":\"Evaluate\"},\"Evaluate\"\
        :{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.statusCode\",\"NumericEquals\"\
        :400,\"Next\":\"fix WAF rules\"},{\"Variable\":\"$.statusCode\",\"NumericEquals\"\
        :200,\"Next\":\"send an email\"}]},\"send an email\":{\"Type\":\"Task\",\"\
        Resource\":\"arn:aws:states:::aws-sdk:sns:publish\",\"Parameters\":{\"Message.$\"\
        :\"$.body\",\"TopicArn\":\"arn:aws:sns:us-east-1:067103940807:frame-email-SNSHumanApprovalEmailTopic-Xieggp9abj4s\"\
        },\"End\":true},\"fix WAF rules\":{\"Type\":\"Task\",\"Resource\":\"arn:aws:states:::lambda:invoke\"\
        ,\"OutputPath\":\"$.Payload\",\"Parameters\":{\"Payload.$\":\"$\",\"FunctionName\"\
        :\"arn:aws:lambda:us-east-1:067103940807:function:frame-bedrock-fix-wafv2:$LATEST\"\
        },\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\"\
        ,\"Lambda.SdkClientException\",\"Lambda.TooManyRequestsException\"],\"IntervalSeconds\"\
        :1,\"MaxAttempts\":3,\"BackoffRate\":2}],\"Next\":\"Apply rules\"},\"Success\"\
        :{\"Type\":\"Succeed\"}}}"
      LoggingConfiguration:
        IncludeExecutionData: false
        Level: "OFF"
      StateMachineName: "frame-auto-waf-generation"
      RoleArn:
        Fn::GetAtt:
        - "IAMRole00StepFunctionsframeautowafgenerationrole294bx96lg00t6wQf"
        - "Arn"
      Tags: []
      StateMachineType: "STANDARD"
      TracingConfiguration:
        Enabled: false
  IAMRole00AmazonEventBridgeInvokeStepFunctions2114717300ALBVS:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - Ref: "IAMManagedPolicy00policyserviceroleAmazonEventBridgeInvokeStepFunctions2114717300jDpDm"
      MaxSessionDuration: 3600
      RoleName: "Amazon_EventBridge_Invoke_Step_Functions_21147173"
      Policies:
      - PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Resource: "arn:aws:s3:::frame-cve-bucket"
            Action: "s3:GetBucketNotification"
            Effect: "Allow"
            Sid: "AllowEventBridgeServicePutEvents"
        PolicyName: "frame-eventbridge-trigger-s3"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "events.amazonaws.com"
  IAMManagedPolicy00policyserviceroleXRayAccessPolicy3a63b717de394314a5cfc12a4849e6ef001K9LX:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "XRayAccessPolicy-3a63b717-de39-4314-a5cf-c12a4849e6ef"
      Path: "/service-role/"
      Description: "Allow AWS Step Functions to call X-Ray daemon on your behalf"
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource:
          - "*"
          Action:
          - "xray:PutTraceSegments"
          - "xray:PutTelemetryRecords"
          - "xray:GetSamplingRules"
          - "xray:GetSamplingTargets"
          Effect: "Allow"
      Roles:
      - "StepFunctions-frame-auto-waf-generation-role-294bx96lg"
      Users: []
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRoled5fac4598298496a9a11d11a0b10227500GOhX2:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-d5fac459-8298-496a-9a11-d11a0b102275"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:us-east-1:067103940807:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:us-east-1:067103940807:log-group:/aws/lambda/frame-bedrock-agent:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - "frame-bedrock-agent-role-gh2fc6nz"
      Users: []
  LambdaFunction00framebedrockagent005iSne:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Function"
    DeletionPolicy: "Retain"
    Properties:
      MemorySize: 128
      Description: ""
      TracingConfig:
        Mode: "PassThrough"
      Timeout: 300
      RuntimeManagementConfig:
        UpdateRuntimeOn: "Auto"
      Handler: "lambda_function.lambda_handler"
      Code:
        S3Bucket:
          Ref: "LambdaFunction00framebedrockagent005iSneCodeS3BucketOneOfuQJ1r"
        S3Key:
          Ref: "LambdaFunction00framebedrockagent005iSneCodeS3KeyOneOfPV49u"
      Role:
        Fn::GetAtt:
        - "IAMRole00framebedrockagentrolegh2fc6nz00J3yQk"
        - "Arn"
      FileSystemConfigs: []
      FunctionName: "frame-bedrock-agent"
      Runtime: "python3.12"
      PackageType: "Zip"
      LoggingConfig:
        LogFormat: "Text"
        LogGroup: "/aws/lambda/frame-bedrock-agent"
      EphemeralStorage:
        Size: 512
      Architectures:
      - "x86_64"
  IAMRole00framebedrockagentrolegh2fc6nz00J3yQk:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - Ref: "IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRoled5fac4598298496a9a11d11a0b10227500GOhX2"
      - "arn:aws:iam::067103940807:policy/service-role/BedrockInvokeModelScopedAccessForFoundationModelPolicy-5fde83d3-f626-4abd-8f90-15f7f3a607f3"
      MaxSessionDuration: 3600
      RoleName: "frame-bedrock-agent-role-gh2fc6nz"
      Policies:
      - PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Resource:
            - "arn:aws:s3:::frame-cve-bucket/*"
            Action:
            - "s3:GetObject"
            Effect: "Allow"
            Sid: "Statement1"
        PolicyName: "frame-bedrock-getObj"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  LambdaFunction00framebedrockfixwafv200jUjZc:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Function"
    DeletionPolicy: "Retain"
    Properties:
      MemorySize: 128
      Description: ""
      TracingConfig:
        Mode: "PassThrough"
      Timeout: 300
      RuntimeManagementConfig:
        UpdateRuntimeOn: "Auto"
      Handler: "lambda_function.lambda_handler"
      Code:
        S3Bucket:
          Ref: "LambdaFunction00framebedrockfixwafv200jUjZcCodeS3BucketOneOfFCcjW"
        S3Key:
          Ref: "LambdaFunction00framebedrockfixwafv200jUjZcCodeS3KeyOneOfX5lda"
      Role:
        Fn::GetAtt:
        - "IAMRole00framebedrockfixwafv2rolexb8zxhuz00cpXNa"
        - "Arn"
      FileSystemConfigs: []
      FunctionName: "frame-bedrock-fix-wafv2"
      Runtime: "python3.12"
      PackageType: "Zip"
      LoggingConfig:
        LogFormat: "Text"
        LogGroup: "/aws/lambda/frame-bedrock-fix-wafv2"
      EphemeralStorage:
        Size: 512
      Architectures:
      - "x86_64"
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole477424cc425144ff93cbcbfd3feeb2a200uFRHO:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-477424cc-4251-44ff-93cb-cbfd3feeb2a2"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:us-east-1:067103940807:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:us-east-1:067103940807:log-group:/aws/lambda/frame-waf-generate:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - "frame-waf-generate-role-q65fd6gv"
      Users: []
  IAMRole00framewafgenerateroleq65fd6gv00VqYfj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - Ref: "IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole477424cc425144ff93cbcbfd3feeb2a200uFRHO"
      - "arn:aws:iam::aws:policy/AWSWAFFullAccess"
      MaxSessionDuration: 3600
      RoleName: "frame-waf-generate-role-q65fd6gv"
      Policies:
      - PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Resource: "*"
            Action:
            - "ssm:PutParameter"
            - "ssm:GetParameter"
            Effect: "Allow"
            Sid: "VisualEditor0"
        PolicyName: "frame-lambda-ssm"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMRole00AmazonEventBridgeSchedulerLAMBDAb33ac7835100qasZ3:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - Ref: "IAMManagedPolicy00policyserviceroleAmazonEventBridgeSchedulerExecutionPolicy0357382e62fb4d1b9d6c530353e9fa7a00vXS1k"
      MaxSessionDuration: 3600
      RoleName: "Amazon_EventBridge_Scheduler_LAMBDA_b33ac78351"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Condition:
            StringEquals:
              aws:SourceAccount: "067103940807"
          Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "scheduler.amazonaws.com"
  IAMRole00framebedrockfilterrolewkc7050800WOVik:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::067103940807:policy/service-role/BedrockInvokeModelScopedAccessForFoundationModelPolicy-5fde83d3-f626-4abd-8f90-15f7f3a607f3"
      - Ref: "IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRoleb16b80fe48c84206acd4a21f29cd7b6c008dpYV"
      MaxSessionDuration: 3600
      RoleName: "frame-bedrock-filter-role-wkc70508"
      Policies:
      - PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Resource:
            - "arn:aws:s3:::frame-cve-bucket/*"
            Action:
            - "s3:GetObject"
            Effect: "Allow"
            Sid: "Statement1"
        PolicyName: "frame-s3-filter-bed-rock"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  LambdaFunction00framebedrockfilter00rKwRh:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Function"
    DeletionPolicy: "Retain"
    Properties:
      MemorySize: 128
      Description: ""
      TracingConfig:
        Mode: "PassThrough"
      Timeout: 300
      RuntimeManagementConfig:
        UpdateRuntimeOn: "Auto"
      Handler: "lambda_function.lambda_handler"
      Code:
        S3Bucket:
          Ref: "LambdaFunction00framebedrockfilter00rKwRhCodeS3BucketOneOfYF25Z"
        S3Key:
          Ref: "LambdaFunction00framebedrockfilter00rKwRhCodeS3KeyOneOfe4PH9"
      Role:
        Fn::GetAtt:
        - "IAMRole00framebedrockfilterrolewkc7050800WOVik"
        - "Arn"
      FileSystemConfigs: []
      FunctionName: "frame-bedrock-filter"
      Runtime: "python3.12"
      PackageType: "Zip"
      LoggingConfig:
        LogFormat: "Text"
        LogGroup: "/aws/lambda/frame-bedrock-filter"
      EphemeralStorage:
        Size: 512
      Architectures:
      - "x86_64"
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRoleb16b80fe48c84206acd4a21f29cd7b6c008dpYV:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-b16b80fe-48c8-4206-acd4-a21f29cd7b6c"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:us-east-1:067103940807:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:us-east-1:067103940807:log-group:/aws/lambda/frame-bedrock-filter:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - "frame-bedrock-filter-role-wkc70508"
      Users: []
  IAMRole00StepFunctionsframeautowafgenerationrole294bx96lg00t6wQf:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - Ref: "IAMManagedPolicy00policyserviceroleLambdaInvokeScopedAccessPolicya6f538c8deda4c479ca209cfdc85354600fkapk"
      - Ref: "IAMManagedPolicy00policyserviceroleXRayAccessPolicy3a63b717de394314a5cfc12a4849e6ef001K9LX"
      MaxSessionDuration: 3600
      RoleName: "StepFunctions-frame-auto-waf-generation-role-294bx96lg"
      Policies:
      - PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Resource: "arn:aws:sns:us-east-1:067103940807:frame-email-SNSHumanApprovalEmailTopic-Xieggp9abj4s"
            Action: "sns:Publish"
            Effect: "Allow"
            Sid: "VisualEditor0"
        PolicyName: "frame-waf-gen-sns"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "states.amazonaws.com"
  IAMRole00framebedrockfixwafv2rolexb8zxhuz00cpXNa:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
      - "arn:aws:iam::067103940807:policy/service-role/BedrockInvokeModelScopedAccessForFoundationModelPolicy-5fde83d3-f626-4abd-8f90-15f7f3a607f3"
      - Ref: "IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole2a1b1bac86c74830a56ef315d90037c100mRALa"
      MaxSessionDuration: 3600
      RoleName: "frame-bedrock-fix-wafv2-role-xb8zxhuz"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMManagedPolicy00policyserviceroleLambdaInvokeScopedAccessPolicya6f538c8deda4c479ca209cfdc85354600fkapk:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "LambdaInvokeScopedAccessPolicy-a6f538c8-deda-4c47-9ca2-09cfdc853546"
      Path: "/service-role/"
      Description: "Allow AWS Step Functions to invoke Lambda functions on your behalf"
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource:
          - "arn:aws:lambda:us-east-1:067103940807:function:frame-bedrock-fix-wafv2:*"
          - "arn:aws:lambda:us-east-1:067103940807:function:frame-email-LambdaHumanApprovalSendEmailFunction-jMeCuQloCzwI:*"
          - "arn:aws:lambda:us-east-1:067103940807:function:frame-bedrock-agent:*"
          - "arn:aws:lambda:us-east-1:067103940807:function:frame-waf-generate:*"
          - "arn:aws:lambda:us-east-1:067103940807:function:frame-bedrock-filter:*"
          - "arn:aws:lambda:us-east-1:067103940807:function:frame-SES:*"
          Action:
          - "lambda:InvokeFunction"
          Effect: "Allow"
        - Resource:
          - "arn:aws:lambda:us-east-1:067103940807:function:frame-bedrock-fix-wafv2"
          - "arn:aws:lambda:us-east-1:067103940807:function:frame-email-LambdaHumanApprovalSendEmailFunction-jMeCuQloCzwI"
          - "arn:aws:lambda:us-east-1:067103940807:function:frame-bedrock-agent"
          - "arn:aws:lambda:us-east-1:067103940807:function:frame-waf-generate"
          Action:
          - "lambda:InvokeFunction"
          Effect: "Allow"
      Roles:
      - "StepFunctions-frame-auto-waf-generation-role-294bx96lg"
      Users: []
  IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRolecb35b7fd262f4b15a6c31e7fd1d6669a00Gqxpj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "AWSLambdaBasicExecutionRole-cb35b7fd-262f-4b15-a6c3-1e7fd1d6669a"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource: "arn:aws:logs:us-east-1:067103940807:*"
          Action: "logs:CreateLogGroup"
          Effect: "Allow"
        - Resource:
          - "arn:aws:logs:us-east-1:067103940807:log-group:/aws/lambda/frame-download-cve:*"
          Action:
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Effect: "Allow"
      Roles:
      - "frame-download-cve-role-b3q30n5n"
      Users: []
  LambdaFunction00frameSES00ZyloV:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Function"
    DeletionPolicy: "Retain"
    Properties:
      MemorySize: 128
      Description: ""
      TracingConfig:
        Mode: "PassThrough"
      Timeout: 10
      RuntimeManagementConfig:
        UpdateRuntimeOn: "Auto"
      Handler: "lambda_function.lambda_handler"
      Code:
        S3Bucket:
          Ref: "LambdaFunction00frameSES00ZyloVCodeS3BucketOneOfyPHr6"
        S3Key:
          Ref: "LambdaFunction00frameSES00ZyloVCodeS3KeyOneOffGsa8"
      Role: "arn:aws:iam::067103940807:role/frame-email-LambdaSendEmailExecutionRole-6qqnHCOYQQcz"
      FileSystemConfigs: []
      FunctionName: "frame-SES"
      Runtime: "python3.12"
      PackageType: "Zip"
      LoggingConfig:
        LogFormat: "Text"
        LogGroup: "/aws/lambda/frame-SES"
      EphemeralStorage:
        Size: 512
      Architectures:
      - "x86_64"
  LambdaFunction00framedownloadcve00Lg2Fo:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Function"
    DeletionPolicy: "Retain"
    Properties:
      MemorySize: 128
      Description: ""
      TracingConfig:
        Mode: "PassThrough"
      Timeout: 300
      RuntimeManagementConfig:
        UpdateRuntimeOn: "Auto"
      Handler: "lambda_function.lambda_handler"
      Code:
        S3Bucket:
          Ref: "LambdaFunction00framedownloadcve00Lg2FoCodeS3BucketOneOfFXebO"
        S3Key:
          Ref: "LambdaFunction00framedownloadcve00Lg2FoCodeS3KeyOneOf93g15"
      Role:
        Fn::GetAtt:
        - "IAMRole00framedownloadcveroleb3q30n5n007qQ3E"
        - "Arn"
      FileSystemConfigs: []
      FunctionName: "frame-download-cve"
      Runtime: "python3.12"
      PackageType: "Zip"
      LoggingConfig:
        LogFormat: "Text"
        LogGroup: "/aws/lambda/frame-download-cve"
      EphemeralStorage:
        Size: 512
      Layers:
      - "arn:aws:lambda:us-east-1:067103940807:layer:frame-request-python:2"
      Architectures:
      - "x86_64"
  IAMManagedPolicy00policyserviceroleAmazonEventBridgeInvokeStepFunctions2114717300jDpDm:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "Amazon_EventBridge_Invoke_Step_Functions_21147173"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource:
          - "arn:aws:states:us-east-1:067103940807:stateMachine:frame-auto-waf-generation"
          Action:
          - "states:StartExecution"
          Effect: "Allow"
      Roles:
      - "Amazon_EventBridge_Invoke_Step_Functions_21147173"
      Users: []
  SchedulerSchedule00framecvesearch00hFGus:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Scheduler::Schedule"
    DeletionPolicy: "Retain"
    Properties:
      GroupName: "default"
      ScheduleExpression: "cron(0 8 * * ? *)"
      Target:
        Arn:
          Fn::GetAtt:
          - "LambdaFunction00framedownloadcve00Lg2Fo"
          - "Arn"
        RetryPolicy:
          MaximumEventAgeInSeconds: 86400
          MaximumRetryAttempts: 185
        RoleArn:
          Fn::GetAtt:
          - "IAMRole00AmazonEventBridgeSchedulerLAMBDAb33ac7835100qasZ3"
          - "Arn"
      Description: ""
      State: "DISABLED"
      FlexibleTimeWindow:
        Mode: "OFF"
      ScheduleExpressionTimezone: "Asia/Bangkok"
      Name: "frame-cve-search"
  LambdaFunction00framewafgenerate00uvipO:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Function"
    DeletionPolicy: "Retain"
    Properties:
      MemorySize: 128
      Description: ""
      TracingConfig:
        Mode: "PassThrough"
      Timeout: 120
      RuntimeManagementConfig:
        UpdateRuntimeOn: "Auto"
      Handler: "lambda_function.lambda_handler"
      Code:
        S3Bucket:
          Ref: "LambdaFunction00framewafgenerate00uvipOCodeS3BucketOneOfGxQkv"
        S3Key:
          Ref: "LambdaFunction00framewafgenerate00uvipOCodeS3KeyOneOfHF8ec"
      Role:
        Fn::GetAtt:
        - "IAMRole00framewafgenerateroleq65fd6gv00VqYfj"
        - "Arn"
      FileSystemConfigs: []
      FunctionName: "frame-waf-generate"
      Runtime: "python3.12"
      PackageType: "Zip"
      LoggingConfig:
        LogFormat: "Text"
        LogGroup: "/aws/lambda/frame-waf-generate"
      EphemeralStorage:
        Size: 512
      Architectures:
      - "x86_64"
  IAMManagedPolicy00policyserviceroleAmazonEventBridgeSchedulerExecutionPolicy0357382e62fb4d1b9d6c530353e9fa7a00vXS1k:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: "Retain"
    Properties:
      ManagedPolicyName: "Amazon-EventBridge-Scheduler-Execution-Policy-0357382e-62fb-4d1b-9d6c-530353e9fa7a"
      Path: "/service-role/"
      Description: ""
      Groups: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Resource:
          - "arn:aws:lambda:us-east-1:067103940807:function:frame-download-cve:*"
          - "arn:aws:lambda:us-east-1:067103940807:function:frame-download-cve"
          Action:
          - "lambda:InvokeFunction"
          Effect: "Allow"
      Roles:
      - "Amazon_EventBridge_Scheduler_LAMBDA_b33ac78351"
      Users: []
